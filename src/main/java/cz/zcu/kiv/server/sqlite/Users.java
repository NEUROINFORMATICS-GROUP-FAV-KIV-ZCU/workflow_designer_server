package cz.zcu.kiv.server.sqlite;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import java.sql.*;

public class Users {
    private static Log logger = LogFactory.getLog(Users.class);

    private String database;
    public Users(String database){
        this.database=database;
    }

    public User addUser(User user) {
        if(getUserByEmail(user.getEmail())==null){
            Connection connection = null;
            PreparedStatement preparedStatement = null;
            try {
                connection = new SQLiteConnection(database).connect();
                preparedStatement =
                        connection.prepareStatement("INSERT into users (email, password, username) VALUES (?,?,?);",
                                Statement.RETURN_GENERATED_KEYS);

                preparedStatement.setString(1, user.getEmail());
                preparedStatement.setString(2, user.getPassword());
                preparedStatement.setString(3, user.getUsername());

                preparedStatement.executeUpdate();

                ResultSet tableKeys = preparedStatement.getGeneratedKeys();
                tableKeys.next();
                long autoGeneratedID = tableKeys.getLong(1);
                user.setId(autoGeneratedID);
                return user;
            }
            catch (SQLException e){
                logger.error(e);
                return null;
            }
            finally {
                if(preparedStatement!=null) {
                    try {
                        preparedStatement.close();
                    } catch (SQLException e1) {
                        logger.error(e1);
                    }
                }
                if(connection!=null){
                    try {
                        connection.close();
                    } catch (SQLException e1) {
                        logger.error(e1);
                    }
                }
            }

        }
        else{
           return null;
        }
    }

    public User getUserByEmail(String email){
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            connection = new SQLiteConnection(database).connect();
            preparedStatement =
                    connection.prepareStatement("SELECT * FROM users WHERE email=?;" );

            preparedStatement.setString(1, email);

            ResultSet resultSet = preparedStatement.executeQuery();
            if(resultSet.next()){
                User user=new User();
                user.setEmail(resultSet.getString("email"));
                user.setPassword(resultSet.getString("password"));
                user.setUsername(resultSet.getString("username"));
                user.setId(resultSet.getLong("id"));
                return user;
            }
            else return null;
        }
        catch (SQLException e){
            logger.error(e);
            return null;
        }
        finally {
            if(preparedStatement!=null) {
                try {
                    preparedStatement.close();
                } catch (SQLException e1) {
                    logger.error(e1);
                }
            }
            if(connection!=null){
                try {
                    connection.close();
                } catch (SQLException e1) {
                    logger.error(e1);
                }
            }

        }
    }

}
